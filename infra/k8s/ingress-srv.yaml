apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-srv
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - messaging-app-prod.chat.com
        - www.messaging-app-prod.chat.com
      secretName: messaging-app-prod.chat-com
  rules:
    - host: messaging-app-prod.chat
      http:
        paths:
          - path: /auth-service
            pathType: ImplementationSpecific
            backend:
              service:
                name: auth-service-cluserip-srv
                port:
                  number: 4000
          - path: /user-service
            pathType: ImplementationSpecific
            backend:
              service:
                name: user-service-cluserip-srv
                port:
                  number: 4001
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: message-service-cluserip-srv
                port:
                  number: 4002
    - host: www.messaging-app-prod.chat.com
      http:
        paths:
          - path: /auth-service
            pathType: ImplementationSpecific
            backend:
              service:
                name: auth-service-cluserip-srv
                port:
                  number: 4000
          - path: /user-service
            pathType: ImplementationSpecific
            backend:
              service:
                name: user-service-cluserip-srv
                port:
                  number: 4001
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: message-service-cluserip-srv
                port:
                  number: 4002
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
    service.beta.kubernetes.io/do-loadbalancer-hostname: "www.messaging-app-prod.chat.com"
  labels:
    helm.sh/chart: ingress-nginx-4.0.6
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 1.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
#     service.beta.kubernetes.io/do-loadbalancer-hostname: "www.messaging-app-prod.chat"
#   labels:
#     helm.sh/chart: ingress-nginx-2.0.3
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/version: 0.32.0
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/component: controller
#   name: ingress-nginx-controller
#   namespace: ingress-nginx
# spec:
#   type: LoadBalancer
#   externalTrafficPolicy: Local
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: http
#     - name: https
#       port: 443
#       protocol: TCP
#       targetPort: https
#   selector:
#     app.kubernetes.io/name: ingress-nginx
#     app.kubernetes.io/instance: ingress-nginx
#     app.kubernetes.io/component: controller
